---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: dex
  namespace: network
spec:
  interval: 5m
  chart:
    spec:
      chart: dex
      version: 2.15.0
      sourceRef:
        kind: HelmRepository
        name: kubernetes-stable-charts
        namespace: flux-system
      interval: 5m
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 5
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 1m
    cleanupOnFail: true
  # Depends on having the sealed secret dex-helm-values un-encrypted.
  dependsOn:
    - name: sealed-secrets
      namespace: kube-system
  values:
    image: ghcr.io/dexidp/dex
    imageTag: v2.26.0
    grpc: false
    ports:
      web:
        servicePort: 5556
    certs:
      image: gcr.io/google_containers/kubernetes-dashboard-init-arm
      web:
        create: false
      grpc:
        create: false
    telemetry: true
    config:
      issuer: https://dex.raspbernetes.com
      storage:
        type: kubernetes
        config:
          inCluster: true
      web:
        http: 0.0.0.0:5556
        # If enabled, be sure to configure tls settings above, or use a tool
        # such as let-encrypt to manage the certs.
        # Currently this chart does not support both http and https, and the port
        # is fixed to 5556
        #
        # https: 0.0.0.0:5556
        # tlsCert: /etc/dex/tls/tls.crt
        # tlsKey: /etc/dex/tls/tls.key
      frontend:
        theme: 'tectonic'
        issuer: 'Raspbernetes'
        issuerUrl: 'https://raspbernetes.com'
        logoUrl: https://github.com/raspbernetes/docs/blob/master/website/static/img/logo.png
      expiry:
        signingKeys: '6h'
        idTokens: '24h'
      logger:
        level: debug
      oauth2:
        alwaysShowLoginScreen: false
        skipApprovalScreen: true
        responseTypes: ['code', 'token', 'id_token']
    ingress:
      enabled: false
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: 'letsencrypt-prod'
        nginx.ingress.kubernetes.io/auth-url: 'https://raspbernetes.com/oauth2/auth'
        nginx.ingress.kubernetes.io/auth-signin: 'https://raspbernetes.com/oauth2/start?rd=$escaped_request_uri'
      hosts:
        - dex.raspbernetes.com
      path: /
      tls:
        - secretName: dex.raspbernetes.com-tls
          hosts:
            - dex.raspbernetes.com
  valuesFrom:
    - kind: Secret
      name: dex-helm-values
