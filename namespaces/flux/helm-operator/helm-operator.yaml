apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: helmreleases.helm.fluxcd.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.releaseName
    description: ReleaseName is the name of the Helm release managed by the HelmRelease,
      as given by Helm.
    name: Release
    type: string
  - JSONPath: .status.phase
    description: Phase is the current release phase being performed for the HelmRelease.
    name: Phase
    type: string
  - JSONPath: .status.releaseStatus
    description: ReleaseStatus is the status of the Helm release managed by the HelmRelease,
      as given by Helm.
    name: Status
    type: string
  - JSONPath: .status.conditions[?(@.type=="Released")].message
    name: Message
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC.
    name: Age
    type: date
  group: helm.fluxcd.io
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
    - hr
    - hrs
    singular: helmrelease
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: HelmRelease is a type to represent a Helm release.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            chart:
              properties:
                chartPullSecret:
                  description: ChartPullSecret holds the reference to the authentication
                    secret for accessing the Helm repository using HTTPS basic auth.
                    NOT IMPLEMENTED!
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                git:
                  description: Git URL is the URL of the Git repository, e.g. `git@github.com:org/repo`,
                    `http://github.com/org/repo`, or `ssh://git@example.com:2222/org/repo.git`.
                  type: string
                name:
                  description: Name is the name of the Helm chart _without_ an alias,
                    e.g. redis (for `helm upgrade [flags] stable/redis`).
                  type: string
                path:
                  description: Path is the path to the chart relative to the repository
                    root.
                  type: string
                ref:
                  description: Ref is the Git branch (or other reference) to use.
                    Defaults to 'master', or the configured default Git ref.
                  type: string
                repository:
                  description: RepoURL is the URL of the Helm repository, e.g. `https://kubernetes-charts.storage.googleapis.com`
                    or `https://charts.example.com`.
                  type: string
                secretRef:
                  description: SecretRef holds the authentication secret for accessing
                    the Git repository (over HTTPS). The credentials will be added
                    to an HTTPS GitURL before the mirror is started.
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  type: object
                skipDepUpdate:
                  description: SkipDepUpdate will tell the operator to skip running
                    'helm dep update' before installing or upgrading the chart, the
                    chart dependencies _must_ be present for this to succeed.
                  type: boolean
                version:
                  description: Version is the targeted Helm chart version, e.g. 7.0.1.
                  type: string
              type: object
            forceUpgrade:
              description: Force will mark this Helm release to `--force` upgrades.
                This forces the resource updates through delete/recreate if needed.
              type: boolean
            helmVersion:
              description: 'HelmVersion is the version of Helm to target. If not supplied,
                the lowest _enabled Helm version_ will be targeted. Valid HelmVersion
                values are: "v2", "v3"'
              enum:
              - v2
              - v3
              type: string
            maxHistory:
              description: MaxHistory is the maximum amount of revisions to keep for
                the Helm release. If not supplied, it defaults to 10.
              type: integer
            releaseName:
              description: ReleaseName is the name of the The Helm release. If not
                supplied, it will be generated by affixing the namespace to the resource
                name.
              type: string
            resetValues:
              description: ResetValues will mark this Helm release to reset the values
                to the defaults of the targeted chart before performing an upgrade.
                Not explicitly setting this to `false` equals to `true` due to the
                declarative nature of the operator.
              type: boolean
            rollback:
              description: The rollback settings for this Helm release.
              properties:
                disableHooks:
                  description: DisableHooks will mark this Helm release to prevent
                    hooks from running during the rollback.
                  type: boolean
                enable:
                  description: Enable will mark this Helm release for rollbacks.
                  type: boolean
                force:
                  description: Force will mark this Helm release to `--force` rollbacks.
                    This forces the resource updates through delete/recreate if needed.
                  type: boolean
                maxRetries:
                  description: MaxRetries is the maximum amount of upgrade retries
                    the operator should make before bailing.
                  format: int64
                  type: integer
                recreate:
                  description: Recreate will mark this Helm release to `--recreate-pods`
                    for if applicable. This performs pod restarts.
                  type: boolean
                retry:
                  description: Retry will mark this Helm release for upgrade retries
                    after a rollback.
                  type: boolean
                timeout:
                  description: Timeout is the time to wait for any individual Kubernetes
                    operation (like Jobs for hooks) during rollback.
                  format: int64
                  type: integer
                wait:
                  description: Wait will mark this Helm release to wait until all
                    Pods, PVCs, Services, and minimum number of Pods of a Deployment,
                    StatefulSet, or ReplicaSet are in a ready state before marking
                    the release as successful.
                  type: boolean
              type: object
            skipCRDs:
              description: SkipCRDs will mark this Helm release to skip the creation
                of CRDs during a Helm 3 installation.
              type: boolean
            targetNamespace:
              description: TargetNamespace overrides the targeted namespace for the
                Helm release. The default namespace equals to the namespace of the
                HelmRelease resource.
              type: string
            timeout:
              description: Timeout is the time to wait for any individual Kubernetes
                operation (like Jobs for hooks) during installation and upgrade operations.
              format: int64
              type: integer
            valueFileSecrets:
              description: ValueFileSecrets holds the local name references to secrets.
                DEPRECATED, use ValuesFrom.secretKeyRef instead.
              items:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              type: array
            values:
              description: Values holds the values for this Helm release.
              type: object
            valuesFrom:
              items:
                properties:
                  chartFileRef:
                    description: The reference to a local chart file with release
                      values.
                    properties:
                      optional:
                        description: Optional will mark this ChartFileSelector as
                          optional. The result of this are that operations are permitted
                          without the source, due to it e.g. being temporarily unavailable.
                        type: boolean
                      path:
                        description: Path is the file path to the source relative
                          to the chart root.
                        type: string
                    required:
                    - path
                    type: object
                  configMapKeyRef:
                    description: The reference to a config map with release values.
                    properties:
                      key:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      optional:
                        type: boolean
                    required:
                    - name
                    type: object
                  externalSourceRef:
                    description: The reference to an external source with release
                      values.
                    properties:
                      optional:
                        description: Optional will mark this ExternalSourceSelector
                          as optional. The result of this are that operations are
                          permitted without the source, due to it e.g. being temporarily
                          unavailable.
                        type: boolean
                      url:
                        description: URL is the URL of the external source.
                        type: string
                    required:
                    - url
                    type: object
                  secretKeyRef:
                    description: The reference to a secret with release values.
                    properties:
                      key:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      optional:
                        type: boolean
                    required:
                    - name
                    type: object
                type: object
              type: array
            wait:
              description: Wait will mark this Helm release to wait until all Pods,
                PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet,
                or ReplicaSet are in a ready state before marking the release as successful.
              type: boolean
          required:
          - chart
          type: object
        status:
          description: HelmReleaseStatus contains status information about an HelmRelease.
          properties:
            conditions:
              description: Conditions contains observations of the resource's state,
                e.g., has the chart which it refers to been fetched.
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the timestamp corresponding
                      to the last status change of this condition.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: LastUpdateTime is the timestamp corresponding to
                      the last status update of this condition.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human readable description of the details
                      of the last transition, complementing reason.
                    type: string
                  reason:
                    description: Reason is a brief machine readable explanation for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of ('True', 'False',
                      'Unknown').
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                    type: string
                  type:
                    description: Type of the condition, one of ('ChartFetched', 'Released',
                      'RolledBack').
                    enum:
                    - ChartFetched
                    - Released
                    - RolledBack
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            lastAttemptedRevision:
              description: LastAttemptedRevision is the revision of the latest chart
                sync, and may be of a failed release.
              type: string
            observedGeneration:
              description: ObservedGeneration is the most recent generation observed
                by the operator.
              format: int64
              type: integer
            phase:
              description: Phase the release is in, one of ('ChartFetched', 'ChartFetchFailed',
                'Installing', 'Upgrading', 'Succeeded', 'RollingBack', 'RolledBack',
                'RollbackFailed')
              enum:
              - ChartFetched
              - ChartFetchFailed
              - Installing
              - Upgrading
              - Succeeded
              - Failed
              - RollingBack
              - RolledBack
              - RollbackFailed
              type: string
            releaseName:
              description: ReleaseName is the name as either supplied or generated.
              type: string
            releaseStatus:
              description: ReleaseStatus is the status as given by Helm for the release
                managed by this resource.
              type: string
            revision:
              description: Revision holds the Git hash or version of the chart currently
                deployed.
              type: string
            rollbackCount:
              description: RollbackCount records the amount of rollback attempts made,
                it is incremented after a rollback failure and reset after a successful
                upgrade or revision change.
              format: int64
              type: integer
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: helm-operator
    chart: helm-operator-1.1.0
    heritage: Helm
    release: default
  name: default-helm-operator
  namespace: flux
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
  labels:
    app: helm-operator
    chart: helm-operator-1.1.0
    heritage: Helm
    release: default
  name: default-helm-operator
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - '*'
  fsGroup:
    rule: RunAsAny
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: helm-operator
    chart: helm-operator-1.1.0
    heritage: Helm
    release: default
  name: default-helm-operator-psp
rules:
- apiGroups:
  - policy
  resourceNames:
  - default-helm-operator
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: helm-operator
    chart: helm-operator-1.1.0
    heritage: Helm
    release: default
  name: default-helm-operator
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: helm-operator
    chart: helm-operator-1.1.0
    heritage: Helm
    release: default
  name: default-helm-operator-psp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-helm-operator-psp
subjects:
- kind: ServiceAccount
  name: default-helm-operator
  namespace: flux
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: helm-operator
    chart: helm-operator-1.1.0
    heritage: Helm
    release: default
  name: default-helm-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-helm-operator
subjects:
- kind: ServiceAccount
  name: default-helm-operator
  namespace: flux
---
apiVersion: v1
data:
  config: |
    apiVersion: v1
    clusters: []
    contexts:
    - context:
        cluster: ""
        namespace: default
        user: ""
      name: default
    current-context: default
    kind: Config
    preferences: {}
    users: []
kind: ConfigMap
metadata:
  name: default-helm-operator-kube-config
  namespace: flux
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: helm-operator
    chart: helm-operator-1.1.0
    heritage: Helm
    release: default
  name: default-helm-operator
  namespace: flux
spec:
  ports:
  - name: http
    port: 3030
    protocol: TCP
    targetPort: http
  selector:
    app: helm-operator
    release: default
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: helm-operator
    chart: helm-operator-1.1.0
    heritage: Helm
    release: default
  name: default-helm-operator
  namespace: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm-operator
      release: default
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/repositories: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app: helm-operator
        release: default
    spec:
      containers:
      - args:
        - --enabled-helm-versions=v3
        - --log-format=fmt
        - --git-timeout=20s
        - --git-poll-interval=1800m
        - --charts-sync-interval=3m
        - --status-update-interval=30s
        - --update-chart-deps=true
        - --log-release-diffs=false
        - --workers=4
        - --tiller-namespace=kube-system
        image: docker.io/raspbernetes/helm-operator:v1.1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 3030
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: flux-helm-operator
        ports:
        - containerPort: 3030
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 3030
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /etc/fluxd/ssh
          name: git-key
          readOnly: true
      serviceAccountName: default-helm-operator
      volumes:
      - name: git-key
        secret:
          defaultMode: 256
          secretName: flux-git-deploy
