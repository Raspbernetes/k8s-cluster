name: build

on: ['pull_request']

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: '.'
          pattern: '*.sh'
          exclude: './.git/*'

      - name: Lint Yaml
        uses: ibiqlik/action-yamllint@v1

      - name: Kubeval
        uses: instrumenta/kubeval-action@master
        with:
          files: 'cluster/'

  compliance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Execute OPA Tests
        id: opa
        run: |
          result=$(docker run --rm --workdir /github/workspace \
            -v $(pwd):/github/workspace \
            openpolicyagent/opa:0.17.2 \
            test security-policies/policies/ -v || exit 0 )
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo $result
          echo "::set-output name=result::$result"

      - name: Execute Conftest Tests - Table Output
        id: conftest-table
        run: |
          result=$(docker run --rm --workdir /github/workspace \
            -v $(pwd):/github/workspace \
            instrumenta/conftest:v0.18.2 \
            test -o table -p security-policies/policies/ --all-namespaces --combine cluster/ --no-color || exit 0)
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo $result
          echo "::set-output name=result::$result"

      - name: Execute Conftest Tests - Stdout Output
        id: conftest-stdout
        run: |
          result=$(docker run --rm --workdir /github/workspace \
            -v $(pwd):/github/workspace \
            instrumenta/conftest:v0.18.2 \
            test -o stdout -p security-policies/policies/ --all-namespaces cluster/ --no-color || exit 0)
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo $result
          echo ::set-output name=result::$result

      - name: Execute Conftest Tests - Helm charts
        id: conftest-helm
        uses: rust84/hrval-action@master
        with:
          helmRelease: cluster/
          helmVersion: v3
          ignoreValues: false
          action: conftest
          policyDir: security-policies

      - name: Post Results
        uses: unsplash/comment-on-pr@master
        if: ${{ always() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ## OPA Test Results
            ```
            ${{ steps.opa.outputs.result }}
            ```

            ## Conftest Test Results
            ```
            ${{ steps.conftest-stdout.outputs.result }}
            ```
          check_for_duplicate_msg: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `####  OPA Validation \`${{ steps.opa.outcome }}\`
            #### CONFTEST Validation \`${{ steps.conftest-stdout.outcome }}\`

            <details><summary>Show OPA Test Results</summary>

            \`\`\`${{ steps.opa.outputs.result }}\`\`\`

            </details>

            <details><summary>Show CONFTEST Results</summary>

            \`\`\` ${{ steps.conftest-stdout.outputs.result }}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
